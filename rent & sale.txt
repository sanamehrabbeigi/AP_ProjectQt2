#include<iostream>
#include<conio.h>
#include<string>

#define FIXED 2000

using namespace std;

class rent
{
private:
	bool type; // 0 for villa 1 for apartment
	double commission, mortgage, corent, final_price;
	long long dorent;
	string id;
public:
	rent();
	~rent();
	//setter :
	void set_type(bool b);
	void set_commission(double a);
	void set_mortgage(double);
	void set_corent(double a);
	void set_final_price();
	void set_dorent(long long a);
	void set_id(string s);
	//getter :
	bool get_type();
	double get_commission();
	double get_mortgage();
	double get_corent();
	double get_final_price();
	long long get_dorent();
	string get_id();
};

rent::rent()
{
	// cout << "counstructor is called!\n";
	commission = FIXED;
	type = 0;
	mortgage = 0;
	corent = 0;
	final_price = 0;
	dorent = 0;
	id = "0";
}
rent::~rent()
{
	// cout << "distructor is called!\n";
}

void rent::set_type(bool b)
{
	type = b;
}
void rent::set_commission(double a)
{
	commission = a;
}
void rent::set_mortgage(double a)
{
	mortgage = (a * 5) / 100;
}
void rent::set_corent(double a)
{
	corent = (a / 100);
}
void rent::set_final_price()
{
	final_price = (corent * dorent) + mortgage + (commission * mortgage);
}
void rent::set_dorent(long long a)
{
	dorent = a;
}
void rent::set_id(string s)
{
	id = s;
}

bool rent::get_type()
{
	return type;
}
double rent::get_commission()
{
	return commission;
}
double rent::get_mortgage()
{
	return mortgage;
}
double rent::get_corent()
{
	return corent;
}
double rent::get_final_price()
{
	return final_price;
}
long long rent::get_dorent()
{
	return dorent;
}
string rent::get_id()
{
	return id;
}

class sale
{
private:
	bool type, payment; // 0 for villa 1 for apartmet 0 for cash 1 for credit
	double commission, final_price;
	string id;
public:
	sale();
	~sale();
	//setter:
	void set_type(bool b);
	void set_payment(bool b);
	void set_commission(double a);
	void set_final_price(double a);
	void set_id(string s);
	//getter:
	bool get_type();
	bool get_payment();
	double get_commission();
	double get_final_price();
	string get_id();
};

sale::sale()
{
	// cout << "counstructor is called!\n";
	commission = FIXED;
	type = 0;
	payment = 0;
	final_price = 0;
	id = "0";
}
sale::~sale()
{
	// cout << "distructor is called!\n";
}

void sale::set_type(bool b)
{
	type = b;
}
void sale::set_payment(bool b)
{
	payment = b;
}
void sale::set_commission(double a)
{
	commission = a;
}
void sale::set_final_price(double a)
{
	final_price = a + (a * commission);
}
void sale::set_id(string s)
{
	id = s;
}

bool sale::get_type()
{
	return type;
}
bool sale::get_payment()
{
	return payment;
}
double sale::get_commission()
{
	return commission;
}
double sale::get_final_price()
{
	return final_price;
}
string sale::get_id()
{
	return id;
}

int main()
{

	getch();
	return 0;
} 